import sys
from collections import defaultdict
from math import inf
from heapq import*
def intinput(a):
    t=''
    for i in a:
        if '0'<=i<='9':
            t+=i
    if len(t)==0:
        print('무언가 잘못되었습니다.')
        return intinput(input("다시 입력"))
    return int(t)
def 학반(a):
    if ('학년' in a) and ('반' in a):
        a.replace(' ','')
        a.replace('학년','-')
        a.replace('반','')
    return a
graph={
    #진로관 1층
    '진로관 1층 계단':{'진로관 2층 계단':18000,'진로관 1층 중앙':5000},
    '진로관 1층 중앙':{'시청각실':10000,'교과교실2':13500,'진로관 1층 화장실':8000,'진로관 1층 계단':5000},
    '1층통로':{'교과교실1':23000,'2층통로':18000,'과학교실3':4500},
    '시청각실':{'진로관 1층 중앙':10000},
    '교과교실2':{'진로관 1층 중앙':13500,'교과교실1':9000},
    '교과교실1':{'1층통로':23000,'교과교실2':9000},
    '진로관 1층 화장실':{'진로관 1층 중앙':8000},
    
    #진로관 2층____________________________
    '진로관 2층 중앙':{'진로관 2층 화장실':8000,'진로관 2층 계단':5000,'3학년 교무실':9000,'3-2':9000},
    '진로관 2층 계단':{'진로관 2층 중앙':5000,'진로관 1층 계단':18000,'진로관 3층 계단':18000},
    '진로관 2층 화장실':{'진로관 2층 중앙':8000},
    '3-2':{'3-3':9000,'진로관 2층 중앙':9000},
    '3-3':{'3-2':9000},
    '3-1':{'3학년 교무실':9000,'2층통로':40500},
    '3학년 교무실':{'진로관 2층 중앙':9000,'3-1':9000},
    '2층통로':{'1층통로':18000,'3-1':40500, '3층통로':18000,'물리실':12500},

    #진로관 3층
    '진로관 3층 계단':{'진로관 3층 중앙':5000,'진로관 2층 계단':18000},
    '진로관 3층 중앙':{'진로관 3층 화장실':8000,'진로관 3층 계단':5000,'3-7':13500,'3-6':13500},
    '진로관 3층 화장실':{'진로관 3층 중앙':8000},
    '3-7':{'진로관 3층 중앙':13500,'3-8':9000},
    '3-8':{'3-7':9000},
    '3-6':{'진로관 3층 중앙':13500,'3-5':9000},
    '3-5':{'3-6':9000,'3-4':9000},
    '3-4':{'교과교실3':9000,'3-5':9000},
    '교과교실3':{'3-4':9000,'3층통로':22500},
    '3층통로':{'교과교실3':22500,'2층통로':18000,'프로파일실':9000},

    #창학관 1층
    '과학교실3':{'1층통로':4500,'과학교실2':9000,'생물실':9000},
    '과학교실2':{'과학교실3':9000,'창학관 1층 중앙':10000,'생물실':9000},
    '창학관 1층 중앙':{'과학교실2':10000,'과학교실1':9000,'창학관 1층 화장실':18000,'통로':14000,'창학관 1층 계단':2500},
    '창학관 1층 화장실':{'창학관 1층 중앙':18000},
    '과학교실1':{'창학관 1층 중앙':9000},
    '창학관 1층 계단':{'창학관 1층 중앙':2500,'창학관 2층 계단':15000},
    '생물실':{'과학교실2':9000,'과학교실3':9000},

    #창학관 2층
    '창학관 2층 계단':{'창학관 1층 계단':15000,'창학관 2층 중앙':2500,'창학관 3층 계단':15000},
    '창학관 2층 중앙':{'과학교육연구실':15000,'창학관 2층 화장실':7500,'컴퓨터실':9000,'과학 동아리실':2500,'지구과학실':9000,'물리실':6000,'창학관 2층 계단':2500},
    '물리실':{'창학관 2층 중앙':6000,'2층통로':12500,'지구과학실':4000},
    '지구과학실':{'창학관 2층 중앙':9000,'물리실':4000},
    '창학관 2층 화장실':{'창학관 2층 중앙':7500},
    '컴퓨터실':{'창학관 2층 중앙':9000},
    '과학 동아리실':{'창학관 2층 중앙':2500},
    '과학교육연구실':{'창학관 2층 중앙':15000},

    #창학관 3층
    '창학관 3층 계단':{'창학관 2층 계단':15000,'창학관 3층 중앙':4000},
    '창학관 3층 중앙':{'창학관 3층 화장실':7500,'창학관 3층 계단':4000,'연구실':15000,'영어전용교실':6500,'진로상담부':2500},
    '창학관 3층 화장실':{'창학관 3층 중앙':7500},
    '연구실':{'창학관 3층 중앙':15000},
    '영어전용교실':{'창학관 3층 중앙':6500},
    '화학실':{'창학관 3층 중앙':9000},
    '진로상담부':{'창학관 3층 중앙':2500,'화학실':9500},
    '화학실':{'진로상담부':9500,'프로파일실':2500},
    '프로파일실':{'화학실':2500,'3층통로':9000},
    #본관-창학관 연결로'
    '통로':{'창학관 1층 중앙':14000,'본관 2층 우측 계단':27000},

    #본관동 2층(창학관 연결)
    '본관 2층 우측 계단':{'통로':27000,'본관 2층 우측 화장실':4000,'보건실':8500,'본관 3층 우측 계단':15000},
    '본관 2층 우측 화장실':{'본관 2층 우측 계단':4000},
    '보건실':{'본관 2층 우측 계단':8500,'교과정보실':9000},
    '교과정보실':{'보건실':9000,'방통고 교무실':9000},
    '방통고 교무실':{'교과정보실':9000,'본관 2층 중앙 계단':18000},
    '본관 2층 중앙 계단':{'방통고 교무실':18000,'본관 3층 중앙 계단':15000,'방송실':4500,'본관 1층 우측 계단':15000},
    '방송실':{'본관 2층 중앙 계단':4500,'교무실':13500},
    '교무실':{'방송실':13500,'2층 원형 계단':2500,'교장실':13500},
    '2층 원형 계단':{'교무실':2500,'1층 원형 계단':15000},
    '교장실':{'교무실':13500,'인성교육부':9000},
    '인성교육부':{'교장실':9000,'본관 2층 좌측 화장실':2500,'본관 2층 좌측 계단':6500},
    '본관 2층 좌측 화장실':{'인성교육부':2500},
    '본관 2층 좌측 계단':{'본관 1층 좌측 계단':15000,'본관 3층 좌측 계단':15000,'인성교육부':6500},

    #본관동 1층
    '본관 1층 우측 계단':{'본관 2층 중앙 계단':15000,'발간실':4500,'보일러실':4500},
    '보일러실':{'본관 1층 우측 계단':4500},
    '발간실':{'본관 1층 우측 계단':4500,'행정실':9000},
    '행정실':{'발간실':9000,'본관 1층 중앙':4500},
    '본관 1층 중앙':{'행정실':4500,'1층 원형 계단':2500,'문서고':7000},
    '1층 원형 계단':{'본관 1층 중앙':2500,'2층 원형 계단':15000},
    '문서고':{'본관 1층 중앙':7000,'학습도움실2':6500},
    '학습도움실2':{'문서고':6500,'학습도움실1':9000},
    '학습도움실1':{'학습도움실2':9000,'본관 1층 화장실':2500,'본관 1층 좌측 계단':6500},
    '본관 1층 화장실':{'학습도움실1':2500},
    '본관 1층 좌측 계단':{'본관 2층 좌측 계단':15000,'학습도움실1':6500},

    #본관동 3층
    '본관 3층 우측 계단':{'본관 2층 우측 계단':15000,'본관 4층 우측 계단':15000,'본관 3층 우측 화장실':2000,'1-8':8500},
    '본관 3층 우측 화장실':{'본관 3층 우측 계단':2000},
    '1-8':{'본관 3층 우측 계단':8500,'1-7':9000},
    '1-7':{'1-8':9000,'1-6':9000},
    '1-6':{'1-7':9000,'3층 홈베이스':2500,'1-5':9000},
    '1-5':{'1-6':9000,'본관 3층 중앙 계단':9000},
    '3층 홈베이스':{'1-6':2500},
    '본관 3층 중앙 계단':{'본관 2층 중앙 계단':15000,'본관 4층 중앙 계단':15000,'1학년 교무실':4500,'1-5':9000},
    '1학년 교무실':{'본관 3층 중앙 계단':4500,'1-4':9000},
    '1-4':{'1학년 교무실':9000,'1-3':9000},
    '1-3':{'1-4':9000,'1-2':9000},
    '1-2':{'1-3':9000,'1-1':9000},
    '1-1':{'1-2':9000,'본관 3층 좌측 화장실':2500,'본관 3층 좌측 계단':6500},
    '본관 3층 좌측 계단':{'본관 2층 좌측 계단':15000,'본관 4층 좌측 계단':15000,'1-1':6500},
    '본관 3층 좌측 화장실':{'1-1':2500},
    #본관동 4층
    '본관 4층 우측 계단':{'본관 3층 우측 계단':15000,'본관 4층 우측 화장실':2000,'2-8':8500},
    '본관 4층 우측 화장실':{'본관 4층 우측 계단':2000},
    '2-8':{'본관 4층 우측 계단':8500,'2-7':9000},
    '2-7':{'2-8':9000,'2-6':9000},
    '2-6':{'2-7':9000,'4층 홈베이스':2500,'2-5':9000},
    '2-5':{'2-6':9000,'본관 4층 중앙 계단':9000},
    '4층 홈베이스':{'2-6':2500},
    '본관 4층 중앙 계단':{'본관 3층 중앙 계단':15000,'2학년 교무실':4500,'2-5':9000},
    '2학년 교무실':{'본관 4층 중앙 계단':4500,'2-4':9000},
    '2-4':{'2학년 교무실':9000,'2-3':9000},
    '2-3':{'2-4':9000,'2-2':9000},
    '2-2':{'2-3':9000,'2-1':9000},
    '2-1':{'2-2':9000,'본관 4층 좌측 화장실':2500,'본관 4층 좌측 계단':6500},
    '본관 4층 좌측 계단':{'본관 3층 좌측 계단':15000,'2-1':6500},
    '본관 4층 좌측 화장실':{'2-1':2500},

}
lang=0
def 목적지(start,end):
    q=[]
    visited=defaultdict(lambda:sys.maxsize)
    cur=0
    t=[]
    heappush(q,(0,start))
    visited[start]=0
    while q:
        x,y=heappop(q)
        if visited[y]<x:
            continue
        for i in graph[y]:
            if visited[i]<=graph[y][i]+x:
                continue
            else:
                cost=graph[y][i]+x
                visited[i]=cost
                heappush(q,(cost,i))
    cur=end
    t=[end]
    last=cur
    while cur!=start:
        last=cur[::]
        for i in graph[cur]:
            if visited[cur]-visited[i]==graph[cur][i]:
                t.append(i)
                cur=i
                break
        if last==cur:
            print(start,end,cur)
            exit()
    return t

def 화장실(start):
    visited=defaultdict(lambda:sys.maxsize)
    q=[]
    heappush(q,(0,start))
    visited[start]=0
    while q:
        x,y=heappop(q)
        if visited[y]<x:
            continue
        for i in graph[y]:
            if visited[i]<=graph[y][i]+x:
                continue
            else:
                cost=graph[y][i]+x
                visited[i]=cost
                heappush(q,(cost,i))
    cur='진로관 2층 화장실'
    for i in visited:
        if '화장실' in i and visited[i]<visited[cur]:
            cur=i
    t=[cur]
    while cur!=start:
        for i in graph[cur]:
            if visited[cur]-visited[i]==graph[cur][i]:
                t.append(i)
                cur=i
                break
    return t

def 도움말():
    if lang==0:
        print("[1] : 목적지 찾기 - 출발지에서 목적지까지 가는 가장 빠른길을 골라드립니다.")
        print('[2] : 화장실 찾기 - 출발지에서 가장 가까운 화장실을 찾아드립니다.')

def 목적지찾기():
    while True:
        n=학반(input("출발지를 입력해주세요"))
        if n in graph:
             break
        else:
            print("그런 위치는 존재하지 않습니다.")
    while True:
        m=학반(input('도착지를 입력해주세요'))
        if m in graph:
            break
        else:
            print("그런 위치는 존재하지 않습니다.")
    print(*목적지(n,m)[::-1],sep='\n')
    return

def 화장실찾기():
    print("이 기능은 화장지를 제공해주지 않습니다.")
    while True:
        n=학반(input("출발지를 입력해주세요"))
        if n in graph:
            break
        else:
            print("그런 위치는 존재하지 않습니다.")
    print(*화장실(n)[::-1],sep='\n')
    return
def debugging():
    for i in graph:
        for j in graph:
            (목적지(i,j))
while True:
    print("원하시는 기능을 선택하여 주십시오")
    print('[1] : 목적지 찾기 \t [2] : 화장실 찾기')
    n=intinput(input())
    if n==1:
        목적지찾기()
    if n==2:
        화장실찾기()
